.\" This file is generated automatically by convert.pl from btreeop/manual.in.
.TH BTREEOP 1 "December 2001" "GNU Project"
.SH NAME
btreeop \- btree database maintenance tool.
.SH SYNOPSIS
\fBbtreeop\fP [-A][-C][-D[n] \fIkey\fP][-K[n] \fIkey\fP][-L[2]][-k \fIprefix\fP][\fIdbname\fP]
.br
.SH DESCRIPTION
\fBBtreeop\fP execute simple operations for \fBbtree\fP(3) database.
\fBBtreeop\fP can create database, write record, read record
(sequential or indexed) and delete record from it.
Duplicate entries are allowed.
Multi-key is available but only primary key can use index of
\fBbtree\fP(3).
.SH COMMANDS
A capital letter means a command. If no command specified
then it assume sequential read operation.
The following commands are available:
.TP
none
Read records sequentially.
.TP
\fB-A\fP
Append records. If database doesn't exist, btreeop creates it.
.TP
\fB-C\fP
Create database and write records to it.
.TP
\fB-D\fP[\fIn\fP] \fIkey\fP
Delete records by the \fIkey\fP. By default, \fIn\fP is 0 (primary key).
.TP
\fB-K\fP[\fIn\fP] \fIkey\fP
Search records by the \fIkey\fP. By default, \fIn\fP is 0 (primary key).
.TP
\fB-L\fP[\fI2\fP]
List all primary keys.
If \fI2\fP is specified, list all the key and data pairs.
.TP
\fIdbname\fP
Database name. By default, it assume \'btree\'.
.SH OPTIONS
.TP
\fB-k\fP \fIprefix\fP
Scan records which have the \fIprefix\fP as a primary key.
This option is valid only with sequential read operation
\fB-L\fP command or no command.
.SH FORMAT
.nf
To creat (or append) database, btreeop read data from stdin.
The format of the data is the following.
.PP
  Primary-key  Secondary-key-1  Secondary-key-2  Data
  (keyno = 0)  (keyno = 1)      (keyno = 2)
  --------------------------------------------------------------
  main         246              main.c           main () {
  func         120              library.c        func(a1, a2)
  .
  .
  .
.PP
o All key and data are separated by blank('\\t' or ' '). 
o Key cannot include blank.
o Data can include blank.
o Null data not allowed.
.PP
Additionally, META record is available. META record has a key that
start with a blank. You can read this record only by indexed read
operation (-K option). Usage is unlimited by btreeop.
.fi
.SH EXAMPLES
.nf
Create database.
.PP
  % btreeop -C
  key1  data1
  key2  data2
  key3  data3
  ^D
  %
.PP
Append records.
.PP
  % btreeop -A
   __.VERSION 2
  key2  data2-2
  ^D
  %
.PP
Sequential read.
.PP
  % btreeop
  key1  data1
  key2  data2-2
  key2  data2
  key3  data3
  %
.PP
Indexed read.
.PP
  % btreeop -K key2
  key2  data2-2
  key2  data2
  % btreeop -K ' __.VERSION'
   __.VERSION 2
  %
.PP
List primary keys.
.PP
  % btreeop -L
  key1
  key2
  key3
  %
.PP
Delete record.
.PP
  % btreeop -D ' __.VERSION'
  % btreeop -K ' __.VERSION'
  %
.PP
.fi
.SH FILES
.TP
\'btree\'
default database name.
.SH DIAGNOSTICS
\fBBtreeop\fP exits with a non 0 value if an error occurred, 0 otherwise.
.SH "SEE ALSO"
\fBbtree\fP(3).
.PP
GNU GLOBAL source code tag system
.br
(http://www.gnu.org/software/global/).
.SH AUTHOR
Shigio Yamaguchi
.SH HISTORY
The \fBbtreeop\fP command appeared in FreeBSD 2.2.2.
